module alu #(DATA_WIDTH = 8) (
  	input wire [1:0] alu_op,
	input wire [DATA_WIDTH-1:0] a,
	input wire [DATA_WIDTH-1:0] b,
	output reg [DATA_WIDTH-1:0] out_alu
);

    // Define opcodes
    parameter ADD = 2'b01;         // A + B
    parameter SUB = 2'b00;         // A - B
    parameter AND = 2'b10;         // A & B
    parameter INC = 2'b11;         // A + 1

    always_comb begin
      case(alu_op)
            ADD: result = a + b;
            SUB: result = a - b;
            AND: result = a & b;
            INC: result = a + 1;
            default: out_alu = {DATA_WIDTH{1'b0}};
        endcase
    end

endmodule