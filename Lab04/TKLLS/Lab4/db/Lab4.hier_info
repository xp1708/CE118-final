|One_Counter
CLK => CLK~0.IN2
Start => Start~0.IN1
DataIn[0] => DataIn[0]~3.IN1
DataIn[1] => DataIn[1]~2.IN1
DataIn[2] => DataIn[2]~1.IN1
DataIn[3] => DataIn[3]~0.IN1
Out[0] <= Data_Path:DP.Out
Out[1] <= Data_Path:DP.Out
Out[2] <= Data_Path:DP.Out
Out[3] <= Data_Path:DP.Out
Done <= Control_Unit:CU.Done


|One_Counter|Control_Unit:CU
CLK => c_state~4.DATAIN
Start => n_state.state1.DATAB
Start => Selector1.IN2
IE <= IE~0.DB_MAX_OUTPUT_PORT_TYPE
WA[0] <= WA[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
WA[1] <= WA[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
WA[2] <= WA[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
WA[3] <= <GND>
WE <= WE~0.DB_MAX_OUTPUT_PORT_TYPE
RAA[0] <= RAA[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
RAA[1] <= RAA[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
RAA[2] <= RAA[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
RAA[3] <= <GND>
REA <= RAA~0.DB_MAX_OUTPUT_PORT_TYPE
RAB[0] <= RAB[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
RAB[1] <= RAB[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
RAB[2] <= <GND>
RAB[3] <= <GND>
REB <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
OE <= Done~0.DB_MAX_OUTPUT_PORT_TYPE
S_ALU1[0] <= <VCC>
S_ALU1[1] <= S_ALU1[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
S_ALU1[2] <= S_ALU1[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
S_ALU1[3] <= <GND>
S_shift[0] <= <GND>
S_shift[1] <= S_shift[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Done <= Done~0.DB_MAX_OUTPUT_PORT_TYPE
Datapath => n_state.state7.DATAB
Datapath => Selector3.IN2


|One_Counter|Data_Path:DP
CLK => CLK~0.IN2
DataIn[0] => DataIn[0]~3.IN1
DataIn[1] => DataIn[1]~2.IN1
DataIn[2] => DataIn[2]~1.IN1
DataIn[3] => DataIn[3]~0.IN1
IE => IE~0.IN1
WA[0] => WA[0]~3.IN1
WA[1] => WA[1]~2.IN1
WA[2] => WA[2]~1.IN1
WA[3] => WA[3]~0.IN1
WE => WE~0.IN1
RAA[0] => RAA[0]~3.IN1
RAA[1] => RAA[1]~2.IN1
RAA[2] => RAA[2]~1.IN1
RAA[3] => RAA[3]~0.IN1
REA => REA~0.IN1
RAB[0] => RAB[0]~3.IN1
RAB[1] => RAB[1]~2.IN1
RAB[2] => RAB[2]~1.IN1
RAB[3] => RAB[3]~0.IN1
REB => REB~0.IN1
OE => OE~0.IN1
S_ALU1[0] => S_ALU1[0]~3.IN1
S_ALU1[1] => S_ALU1[1]~2.IN1
S_ALU1[2] => S_ALU1[2]~1.IN1
S_ALU1[3] => S_ALU1[3]~0.IN1
S_shift[0] => S_shift[0]~1.IN1
S_shift[1] => S_shift[1]~0.IN1
Out[0] <= Register4Bit:Reg1.data_out
Out[1] <= Register4Bit:Reg1.data_out
Out[2] <= Register4Bit:Reg1.data_out
Out[3] <= Register4Bit:Reg1.data_out
Datapath <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|Mux2_1:Mux2_1
a[0] => muxout~3.DATAB
a[1] => muxout~2.DATAB
a[2] => muxout~1.DATAB
a[3] => muxout~0.DATAB
b[0] => muxout~3.DATAA
b[1] => muxout~2.DATAA
b[2] => muxout~1.DATAA
b[3] => muxout~0.DATAA
sel => muxout~0.OUTPUTSELECT
sel => muxout~1.OUTPUTSELECT
sel => muxout~2.OUTPUTSELECT
sel => muxout~3.OUTPUTSELECT
muxout[0] <= muxout~3.DB_MAX_OUTPUT_PORT_TYPE
muxout[1] <= muxout~2.DB_MAX_OUTPUT_PORT_TYPE
muxout[2] <= muxout~1.DB_MAX_OUTPUT_PORT_TYPE
muxout[3] <= muxout~0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|RegisterFile:Reg
CLK => regfile.we_a.CLK
CLK => regfile.waddr_a[3].CLK
CLK => regfile.waddr_a[2].CLK
CLK => regfile.waddr_a[1].CLK
CLK => regfile.waddr_a[0].CLK
CLK => regfile.data_a[3].CLK
CLK => regfile.data_a[2].CLK
CLK => regfile.data_a[1].CLK
CLK => regfile.data_a[0].CLK
CLK => regfile.CLK0
WA[0] => regfile.waddr_a[0].DATAIN
WA[0] => regfile.WADDR
WA[1] => regfile.waddr_a[1].DATAIN
WA[1] => regfile.WADDR1
WA[2] => regfile.waddr_a[2].DATAIN
WA[2] => regfile.WADDR2
WA[3] => regfile.waddr_a[3].DATAIN
WA[3] => regfile.WADDR3
WD[0] => regfile.data_a[0].DATAIN
WD[0] => regfile.DATAIN
WD[1] => regfile.data_a[1].DATAIN
WD[1] => regfile.DATAIN1
WD[2] => regfile.data_a[2].DATAIN
WD[2] => regfile.DATAIN2
WD[3] => regfile.data_a[3].DATAIN
WD[3] => regfile.DATAIN3
WE => regfile.we_a.DATAIN
WE => regfile.WE
RAA[0] => regfile.RADDR
RAA[1] => regfile.RADDR1
RAA[2] => regfile.RADDR2
RAA[3] => regfile.RADDR3
RDA[0] <= RDA[0]~0.DB_MAX_OUTPUT_PORT_TYPE
RDA[1] <= RDA[1]~1.DB_MAX_OUTPUT_PORT_TYPE
RDA[2] <= RDA[2]~2.DB_MAX_OUTPUT_PORT_TYPE
RDA[3] <= RDA[3]~3.DB_MAX_OUTPUT_PORT_TYPE
REA => RDA[0]~0.OE
REA => RDA[1]~1.OE
REA => RDA[2]~2.OE
REA => RDA[3]~3.OE
RAB[0] => regfile.PORTBRADDR
RAB[1] => regfile.PORTBRADDR1
RAB[2] => regfile.PORTBRADDR2
RAB[3] => regfile.PORTBRADDR3
RDB[0] <= RDB[0]~0.DB_MAX_OUTPUT_PORT_TYPE
RDB[1] <= RDB[1]~1.DB_MAX_OUTPUT_PORT_TYPE
RDB[2] <= RDB[2]~2.DB_MAX_OUTPUT_PORT_TYPE
RDB[3] <= RDB[3]~3.DB_MAX_OUTPUT_PORT_TYPE
REB => RDB[0]~0.OE
REB => RDB[1]~1.OE
REB => RDB[2]~2.OE
REB => RDB[3]~3.OE


|One_Counter|Data_Path:DP|ALU:ALU1
a[0] => a[0]~3.IN7
a[1] => a[1]~2.IN8
a[2] => a[2]~1.IN8
a[3] => a[3]~0.IN7
b[0] => b[0]~3.IN3
b[1] => b[1]~2.IN3
b[2] => b[2]~1.IN3
b[3] => b[3]~0.IN3
sel[0] => sel[0]~3.IN3
sel[1] => sel[1]~2.IN3
sel[2] => sel[2]~1.IN3
sel[3] => sel[3]~0.IN3
out[0] <= mux16_1:mux16_1.out
out[1] <= mux16_1:mux16_1.out
out[2] <= mux16_1:mux16_1.out
out[3] <= mux16_1:mux16_1.out
cin => cin~0.IN4
add_sub_overflow <= mux4_1:mux2.out
mul_overflow <= Multiplier:Mul.mul_overflow
zero <= mux4_1:mux1.out


|One_Counter|Data_Path:DP|ALU:ALU1|mux4_1:mux1
add => Mux0.IN0
sub => Mux0.IN1
incre => Mux0.IN2
decre => Mux0.IN3
decre => Mux0.IN4
decre => Mux0.IN5
decre => Mux0.IN6
decre => Mux0.IN7
decre => Mux0.IN8
decre => Mux0.IN9
decre => Mux0.IN10
decre => Mux0.IN11
decre => Mux0.IN12
decre => Mux0.IN13
decre => Mux0.IN14
sel[0] => Mux0.IN19
sel[1] => Mux0.IN18
sel[2] => Mux0.IN17
sel[3] => Mux0.IN16
out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
mul => Mux0.IN15


|One_Counter|Data_Path:DP|ALU:ALU1|mux4_1:mux2
add => Mux0.IN0
sub => Mux0.IN1
incre => Mux0.IN2
decre => Mux0.IN3
decre => Mux0.IN4
decre => Mux0.IN5
decre => Mux0.IN6
decre => Mux0.IN7
decre => Mux0.IN8
decre => Mux0.IN9
decre => Mux0.IN10
decre => Mux0.IN11
decre => Mux0.IN12
decre => Mux0.IN13
decre => Mux0.IN14
sel[0] => Mux0.IN19
sel[1] => Mux0.IN18
sel[2] => Mux0.IN17
sel[3] => Mux0.IN16
out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
mul => Mux0.IN15


|One_Counter|Data_Path:DP|ALU:ALU1|mux16_1:mux16_1
comp[0] => Mux3.IN0
comp[0] => Mux3.IN1
comp[0] => Mux3.IN2
comp[0] => Mux3.IN3
comp[0] => Mux3.IN4
comp[0] => Mux3.IN5
comp[1] => Mux2.IN0
comp[1] => Mux2.IN1
comp[1] => Mux2.IN2
comp[1] => Mux2.IN3
comp[1] => Mux2.IN4
comp[1] => Mux2.IN5
comp[2] => Mux1.IN0
comp[2] => Mux1.IN1
comp[2] => Mux1.IN2
comp[2] => Mux1.IN3
comp[2] => Mux1.IN4
comp[2] => Mux1.IN5
comp[3] => Mux0.IN0
comp[3] => Mux0.IN1
comp[3] => Mux0.IN2
comp[3] => Mux0.IN3
comp[3] => Mux0.IN4
comp[3] => Mux0.IN5
And[0] => Mux3.IN6
And[1] => Mux2.IN6
And[2] => Mux1.IN6
And[3] => Mux0.IN6
exor[0] => Mux3.IN7
exor[1] => Mux2.IN7
exor[2] => Mux1.IN7
exor[3] => Mux0.IN7
Or[0] => Mux3.IN8
Or[1] => Mux2.IN8
Or[2] => Mux1.IN8
Or[3] => Mux0.IN8
decre[0] => Mux3.IN9
decre[1] => Mux2.IN9
decre[2] => Mux1.IN9
decre[3] => Mux0.IN9
add[0] => Mux3.IN10
add[1] => Mux2.IN10
add[2] => Mux1.IN10
add[3] => Mux0.IN10
sub[0] => Mux3.IN11
sub[1] => Mux2.IN11
sub[2] => Mux1.IN11
sub[3] => Mux0.IN11
incre[0] => Mux3.IN12
incre[1] => Mux2.IN12
incre[2] => Mux1.IN12
incre[3] => Mux0.IN12
shiftL[0] => Mux3.IN13
shiftL[1] => Mux2.IN13
shiftL[2] => Mux1.IN13
shiftL[3] => Mux0.IN13
shiftR[0] => Mux3.IN14
shiftR[1] => Mux2.IN14
shiftR[2] => Mux1.IN14
shiftR[3] => Mux0.IN14
mul[0] => Mux3.IN15
mul[1] => Mux2.IN15
mul[2] => Mux1.IN15
mul[3] => Mux0.IN15
sel[0] => Mux0.IN19
sel[0] => Mux1.IN19
sel[0] => Mux2.IN19
sel[0] => Mux3.IN19
sel[1] => Mux0.IN18
sel[1] => Mux1.IN18
sel[1] => Mux2.IN18
sel[1] => Mux3.IN18
sel[2] => Mux0.IN17
sel[2] => Mux1.IN17
sel[2] => Mux2.IN17
sel[2] => Mux3.IN17
sel[3] => Mux0.IN16
sel[3] => Mux1.IN16
sel[3] => Mux2.IN16
sel[3] => Mux3.IN16
out[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|comp:Comp
a[0] => comp[0].DATAIN
a[1] => comp[1].DATAIN
a[2] => comp[2].DATAIN
a[3] => comp[3].DATAIN
comp[0] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
comp[1] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
comp[2] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
comp[3] <= a[3].DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|FullSubtracter:Decre
a[0] => co0~0.IN0
a[0] => co0~3.IN0
a[0] => s~0.IN0
a[1] => co1~0.IN1
a[1] => co1~3.IN0
a[1] => s~2.IN0
a[2] => co2~0.IN1
a[2] => co2~3.IN0
a[2] => s~4.IN0
a[3] => s~6.IN0
a[3] => sub_overflow~0.IN0
a[3] => sub_overflow~1.IN1
b[0] => co0~1.IN0
b[0] => co0~3.IN1
b[0] => s~0.IN1
b[1] => co1~1.IN1
b[1] => co1~3.IN1
b[1] => s~2.IN1
b[2] => co2~1.IN1
b[2] => co2~3.IN1
b[2] => s~4.IN1
b[3] => sub_overflow~0.IN1
b[3] => s~6.IN1
ci => co0~0.IN1
ci => co0~1.IN1
ci => s~1.IN1
s[0] <= s~1.DB_MAX_OUTPUT_PORT_TYPE
s[1] <= s~3.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= s~5.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= s~7.DB_MAX_OUTPUT_PORT_TYPE
sub_overflow <= sub_overflow~2.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|FullAdder:Add
a[0] => co0~0.IN0
a[0] => co0~3.IN0
a[0] => s~0.IN0
a[1] => co1~0.IN1
a[1] => co1~3.IN0
a[1] => s~2.IN0
a[2] => co2~0.IN1
a[2] => co2~3.IN0
a[2] => s~4.IN0
a[3] => co3~0.IN1
a[3] => co3~3.IN0
a[3] => s~6.IN0
b[0] => co0~1.IN0
b[0] => co0~3.IN1
b[0] => s~0.IN1
b[1] => co1~1.IN1
b[1] => co1~3.IN1
b[1] => s~2.IN1
b[2] => co2~1.IN1
b[2] => co2~3.IN1
b[2] => s~4.IN1
b[3] => co3~1.IN1
b[3] => co3~3.IN1
b[3] => s~6.IN1
ci => co0~0.IN1
ci => co0~1.IN1
ci => s~1.IN1
s[0] <= s~1.DB_MAX_OUTPUT_PORT_TYPE
s[1] <= s~3.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= s~5.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= s~7.DB_MAX_OUTPUT_PORT_TYPE
add_overflow <= add_overflow~0.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|FullSubtracter:Sub
a[0] => co0~0.IN0
a[0] => co0~3.IN0
a[0] => s~0.IN0
a[1] => co1~0.IN1
a[1] => co1~3.IN0
a[1] => s~2.IN0
a[2] => co2~0.IN1
a[2] => co2~3.IN0
a[2] => s~4.IN0
a[3] => s~6.IN0
a[3] => sub_overflow~0.IN0
a[3] => sub_overflow~1.IN1
b[0] => co0~1.IN0
b[0] => co0~3.IN1
b[0] => s~0.IN1
b[1] => co1~1.IN1
b[1] => co1~3.IN1
b[1] => s~2.IN1
b[2] => co2~1.IN1
b[2] => co2~3.IN1
b[2] => s~4.IN1
b[3] => sub_overflow~0.IN1
b[3] => s~6.IN1
ci => co0~0.IN1
ci => co0~1.IN1
ci => s~1.IN1
s[0] <= s~1.DB_MAX_OUTPUT_PORT_TYPE
s[1] <= s~3.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= s~5.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= s~7.DB_MAX_OUTPUT_PORT_TYPE
sub_overflow <= sub_overflow~2.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|FullAdder:Incre
a[0] => co0~0.IN0
a[0] => co0~3.IN0
a[0] => s~0.IN0
a[1] => co1~0.IN1
a[1] => co1~3.IN0
a[1] => s~2.IN0
a[2] => co2~0.IN1
a[2] => co2~3.IN0
a[2] => s~4.IN0
a[3] => co3~0.IN1
a[3] => co3~3.IN0
a[3] => s~6.IN0
b[0] => co0~1.IN0
b[0] => co0~3.IN1
b[0] => s~0.IN1
b[1] => co1~1.IN1
b[1] => co1~3.IN1
b[1] => s~2.IN1
b[2] => co2~1.IN1
b[2] => co2~3.IN1
b[2] => s~4.IN1
b[3] => co3~1.IN1
b[3] => co3~3.IN1
b[3] => s~6.IN1
ci => co0~0.IN1
ci => co0~1.IN1
ci => s~1.IN1
s[0] <= s~1.DB_MAX_OUTPUT_PORT_TYPE
s[1] <= s~3.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= s~5.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= s~7.DB_MAX_OUTPUT_PORT_TYPE
add_overflow <= add_overflow~0.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|ALU:ALU1|Multiplier:Mul
a[0] => Mult0.IN3
a[1] => Mult0.IN2
a[2] => Mult0.IN1
a[3] => Mult0.IN0
b[0] => Mult0.IN7
b[1] => Mult0.IN6
b[2] => Mult0.IN5
b[3] => Mult0.IN4
out[0] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mul_overflow <= mul_overflow~0.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|Shift_Register:Shift_Reg
data_in[0] => Mux2.IN3
data_in[0] => Mux3.IN3
data_in[1] => Mux1.IN3
data_in[1] => Mux2.IN2
data_in[1] => Mux3.IN2
data_in[2] => Mux0.IN3
data_in[2] => Mux1.IN2
data_in[2] => Mux2.IN1
data_in[3] => Mux0.IN2
data_in[3] => Mux1.IN1
shift_ctrl[0] => Mux0.IN5
shift_ctrl[0] => Mux1.IN5
shift_ctrl[0] => Mux2.IN5
shift_ctrl[0] => Mux3.IN5
shift_ctrl[1] => Mux0.IN4
shift_ctrl[1] => Mux1.IN4
shift_ctrl[1] => Mux2.IN4
shift_ctrl[1] => Mux3.IN4
data_out[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|One_Counter|Data_Path:DP|Register4Bit:Reg1
data_in[0] => data_out[0]~reg0.DATAIN
data_in[1] => data_out[1]~reg0.DATAIN
data_in[2] => data_out[2]~reg0.DATAIN
data_in[3] => data_out[3]~reg0.DATAIN
load_enable => data_out[0]~reg0.ENA
load_enable => data_out[1]~reg0.ENA
load_enable => data_out[2]~reg0.ENA
load_enable => data_out[3]~reg0.ENA
CLK => data_out[0]~reg0.CLK
CLK => data_out[1]~reg0.CLK
CLK => data_out[2]~reg0.CLK
CLK => data_out[3]~reg0.CLK
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


